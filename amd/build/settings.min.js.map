{"version":3,"file":"settings.min.js","sources":["../src/settings.js"],"sourcesContent":["/**\n * This file is part of Moodle - http://moodle.org/\n *\n * Moodle is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Moodle is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @author    Jonathan Garcia Gomez jonathan.garcia@openlms.net\n * @copyright Copyright (c) 2017 Open LMS (https://www.openlms.net)\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * JS code to test SafeAssing Credentials.\n */\ndefine(['jquery', 'core/modal_factory', 'core/templates', 'core/str', 'core/notification', 'core/ajax'],\n    function($, ModalFactory, Templates, str, Notification, ajax) {\n        return {\n\n            /**\n             * Through the Moodle core functions sends the data for instructor and student so their credentials\n             * can be tested.\n             * @param {string} storedUrl\n             */\n            init: function(storedUrl) {\n\n                // We need all the required inputs to test connection.\n                var inputs = '#id_safeassign_api, #id_safeassign_instructor_username, #id_safeassign_instructor_password, ' +\n                    '#id_safeassign_student_username, #id_safeassign_student_password';\n\n                // Disables the \"Test connection\" button and changes the text value.\n                var disableButton = function(string) {\n                    $('#id_test_credentials').attr('disabled', 'disabled');\n                    $('#id_test_credentials').attr('value', string);\n                };\n\n                var buttonText = str.get_string('button_disabled', 'plagiarism_safeassign');\n\n                $.when(buttonText).done(function(localizedString) {\n\n                    // New forms should have the \"Test connection\" button disabled until the fields have content.\n                    $(inputs).each(function() {\n                        if ($(this).val() == '') {\n                            disableButton(localizedString);\n                        }\n                    });\n\n                    // Changes in the input fields should be saved to enable the \"Test connection\" button.\n                    $(inputs).on('input', function() {\n                        disableButton(localizedString);\n                    });\n\n                    // If the stored URL is different from the one selected in the dropdown, disable the \"Test connection\" button.\n                    var url = $('#id_safeassign_api').val();\n                    if (url != storedUrl) {\n                        disableButton(localizedString);\n                    }\n                });\n\n                /**\n                 * Changes the class of the html element to match the response status.\n                 * @param {string} selector Id for the html element\n                 * @param {bool} status Response status\n                 */\n                var swapClasses = function(selector, status) {\n                    if (status) {\n                        if ($(selector).hasClass('alert-warning')) {\n                            $(selector).removeClass(\"alert-warning\").addClass('alert-success');\n                        } else if ($(selector).hasClass('alert-danger')) {\n                            $(selector).removeClass(\"alert-danger\").addClass('alert-success');\n                        }\n                    } else {\n                        if ($(selector).hasClass('alert-warning')) {\n                            $(selector).removeClass(\"alert-warning\").addClass('alert-danger');\n                        } else if ($(selector).hasClass('alert-success')) {\n                            $(selector).removeClass(\"alert-success\").addClass('alert-danger');\n                        }\n                    }\n                };\n\n                var credentialsTrigger = $('#id_test_credentials');\n\n                // First bring the required stings for the modal.\n                var strings = str.get_strings([\n                    {key: 'test_credentials', component: 'plagiarism_safeassign'},\n                    {key: 'safeassign_credentials_verified', component: 'plagiarism_safeassign'},\n                    {key: 'safeassign_credentials_fail', component: 'plagiarism_safeassign'}\n                ]);\n\n                var localizedStrings = [];\n\n                // When the strings are ready we can create the modal.\n                $.when(strings).done(function(localizedEditString) {\n                    localizedStrings = localizedEditString;\n                    ModalFactory.create({\n                        title: localizedEditString[0],\n                        body: Templates.render('plagiarism_safeassign/modal', {}),\n                        type: ModalFactory.types.DEFAULT,\n                    }, credentialsTrigger);\n                });\n\n                /**\n                 * Set the default state for the modal\n                 * @param {string} selector\n                 */\n                var setDefault = function(selector) {\n                    if ($(selector).hasClass('alert-success')) {\n                        $(selector).removeClass(\"alert-success\").addClass('alert-warning');\n                    } else if ($(selector).hasClass('alert-danger')) {\n                        $(selector).removeClass(\"alert-danger\").addClass('alert-warning');\n                    }\n                };\n\n                /**\n                 * Sends the username and password to validate student/instructor credentials.\n                 * It also changes the text and the class of the modal <p> tag.\n                 * @param {string} resultText Selector used to identify the text that should change.\n                 * @param {string} resultElement Selector used to identify the html tag to change its color.\n                 * @param {string} username\n                 * @param {string} password\n                 * @param {string} baseUrl\n                 * @param {int}    userId\n                 */\n                var testCredentials = function(resultText, resultElement, username, password, baseUrl, userId) {\n                    var promise = ajax.call(\n                        [{\n                            methodname: 'plagiarism_safeassign_test_api_credentials',\n                            args: {\n                                username: username,\n                                password: password,\n                                baseurl: baseUrl,\n                                userid: userId\n                            }\n                        }]\n                    )[0];\n                    promise.done(function(response) {\n                        if (response.success) {\n                            swapClasses(resultElement, true);\n                            $(resultText).text(localizedStrings[1]);\n                        } else {\n                            swapClasses(resultElement, false);\n                            $(resultText).text(localizedStrings[2]);\n                        }\n                    }).fail(function() {\n                        swapClasses(resultElement, false);\n                        $(resultText).text(localizedStrings[2]);\n                    });\n                };\n\n                credentialsTrigger.click(function(e) {\n                    e.preventDefault();\n                    setDefault('#instructor_credentials');\n                    $('#instructor_result').text('...');\n                    setDefault('#student_credentials');\n                    $('#student_result').text('...');\n                    var instructorUsername = $('#id_safeassign_instructor_username').val();\n                    var instructorPassword = $('#id_safeassign_instructor_password').val();\n                    var studentUsername = $('#id_safeassign_student_username').val();\n                    var studentPassword = $('#id_safeassign_student_password').val();\n                    var userId = $('input[name=userid]').val();\n                    var baseUrl = $('#id_safeassign_api').val();\n                    testCredentials('#instructor_result', '#instructor_credentials', instructorUsername,\n                        instructorPassword, baseUrl, userId);\n                    testCredentials('#student_result', '#student_credentials', studentUsername, studentPassword,\n                        baseUrl, userId);\n                });\n\n                var cleanSelect = $('#id_safeassign_additional_roles');\n                if (cleanSelect.find('option').length > 1) {\n                    cleanSelect.change(function() {\n                        $( \"option:selected\" ).each(function() {\n                            if ($(this).val() == 0) {\n                                cleanSelect.val(0);\n                            }\n                        });\n                    });\n                }\n            }\n        };\n    }\n);\n"],"names":["define","$","ModalFactory","Templates","str","Notification","ajax","init","storedUrl","inputs","disableButton","string","attr","buttonText","get_string","when","done","localizedString","each","this","val","on","swapClasses","selector","status","hasClass","removeClass","addClass","credentialsTrigger","strings","get_strings","key","component","localizedStrings","localizedEditString","create","title","body","render","type","types","DEFAULT","setDefault","testCredentials","resultText","resultElement","username","password","baseUrl","userId","call","methodname","args","baseurl","userid","response","success","text","fail","click","e","preventDefault","instructorUsername","instructorPassword","studentUsername","studentPassword","cleanSelect","find","length","change"],"mappings":"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"}