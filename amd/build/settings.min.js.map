{"version":3,"sources":["../src/settings.js"],"names":["define","$","ModalFactory","Templates","str","Notification","ajax","init","storedUrl","disableButton","string","attr","buttonText","get_string","when","done","localizedString","each","val","on","url","swapClasses","selector","status","hasClass","removeClass","addClass","credentialsTrigger","strings","get_strings","key","component","localizedStrings","localizedEditString","create","title","body","render","type","types","DEFAULT","setDefault","testCredentials","resultText","resultElement","username","password","baseUrl","userId","promise","call","methodname","args","baseurl","userid","response","success","text","fail","click","e","preventDefault","instructorUsername","instructorPassword","studentUsername","studentPassword","cleanSelect","find","length","change"],"mappings":"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","sourcesContent":["/**\n * This file is part of Moodle - http://moodle.org/\n *\n * Moodle is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Moodle is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @package   plagiarism_safeassign\n * @author    Jonathan Garcia Gomez jonathan.garcia@openlms.net\n * @copyright Copyright (c) 2017 Open LMS (https://www.openlms.net)\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * JS code to test SafeAssing Credentials.\n */\ndefine(['jquery', 'core/modal_factory', 'core/templates', 'core/str', 'core/notification', 'core/ajax'],\n    function($, ModalFactory, Templates, str, Notification, ajax) {\n        return {\n\n            /**\n             * Through the Moodle core functions sends the data for instructor and student so their credentials\n             * can be tested.\n             * @param {string} storedUrl\n             */\n            init: function(storedUrl) {\n\n                // We need all the required inputs to test connection.\n                var inputs = '#id_safeassign_api, #id_safeassign_instructor_username, #id_safeassign_instructor_password, ' +\n                    '#id_safeassign_student_username, #id_safeassign_student_password';\n\n                // Disables the \"Test connection\" button and changes the text value.\n                var disableButton = function(string) {\n                    $('#id_test_credentials').attr('disabled', 'disabled');\n                    $('#id_test_credentials').attr('value', string);\n                };\n\n                var buttonText = str.get_string('button_disabled', 'plagiarism_safeassign');\n\n                $.when(buttonText).done(function(localizedString) {\n\n                    // New forms should have the \"Test connection\" button disabled until the fields have content.\n                    $(inputs).each(function() {\n                        if ($(this).val() == '') {\n                            disableButton(localizedString);\n                        }\n                    });\n\n                    // Changes in the input fields should be saved to enable the \"Test connection\" button.\n                    $(inputs).on('input', function() {\n                        disableButton(localizedString);\n                    });\n\n                    // If the stored URL is different from the one selected in the dropdown, disable the \"Test connection\" button.\n                    var url = $('#id_safeassign_api').val();\n                    if (url != storedUrl) {\n                        disableButton(localizedString);\n                    }\n                });\n\n                /**\n                 * Changes the class of the html element to match the response status.\n                 * @param {string} selector Id for the html element\n                 * @param {bool} status Response status\n                 */\n                var swapClasses = function(selector, status) {\n                    if (status) {\n                        if ($(selector).hasClass('alert-warning')) {\n                            $(selector).removeClass(\"alert-warning\").addClass('alert-success');\n                        } else if ($(selector).hasClass('alert-danger')) {\n                            $(selector).removeClass(\"alert-danger\").addClass('alert-success');\n                        }\n                    } else {\n                        if ($(selector).hasClass('alert-warning')) {\n                            $(selector).removeClass(\"alert-warning\").addClass('alert-danger');\n                        } else if ($(selector).hasClass('alert-success')) {\n                            $(selector).removeClass(\"alert-success\").addClass('alert-danger');\n                        }\n                    }\n                };\n\n                var credentialsTrigger = $('#id_test_credentials');\n\n                // First bring the required stings for the modal.\n                var strings = str.get_strings([\n                    {key: 'test_credentials', component: 'plagiarism_safeassign'},\n                    {key: 'safeassign_credentials_verified', component: 'plagiarism_safeassign'},\n                    {key: 'safeassign_credentials_fail', component: 'plagiarism_safeassign'}\n                ]);\n\n                var localizedStrings = [];\n\n                // When the strings are ready we can create the modal.\n                $.when(strings).done(function(localizedEditString) {\n                    localizedStrings = localizedEditString;\n                    ModalFactory.create({\n                        title: localizedEditString[0],\n                        body: Templates.render('plagiarism_safeassign/modal', {}),\n                        type: ModalFactory.types.DEFAULT,\n                    }, credentialsTrigger);\n                });\n\n                /**\n                 * Set the default state for the modal\n                 * @param {string} selector\n                 */\n                var setDefault = function(selector) {\n                    if ($(selector).hasClass('alert-success')) {\n                        $(selector).removeClass(\"alert-success\").addClass('alert-warning');\n                    } else if ($(selector).hasClass('alert-danger')) {\n                        $(selector).removeClass(\"alert-danger\").addClass('alert-warning');\n                    }\n                };\n\n                /**\n                 * Sends the username and password to validate student/instructor credentials.\n                 * It also changes the text and the class of the modal <p> tag.\n                 * @param {string} resultText Selector used to identify the text that should change.\n                 * @param {string} resultElement Selector used to identify the html tag to change its color.\n                 * @param {string} username\n                 * @param {string} password\n                 * @param {string} baseUrl\n                 * @param {int}    userId\n                 */\n                var testCredentials = function(resultText, resultElement, username, password, baseUrl, userId) {\n                    var promise = ajax.call(\n                        [{\n                            methodname: 'plagiarism_safeassign_test_api_credentials',\n                            args: {\n                                username: username,\n                                password: password,\n                                baseurl: baseUrl,\n                                userid: userId\n                            }\n                        }]\n                    )[0];\n                    promise.done(function(response) {\n                        if (response.success) {\n                            swapClasses(resultElement, true);\n                            $(resultText).text(localizedStrings[1]);\n                        } else {\n                            swapClasses(resultElement, false);\n                            $(resultText).text(localizedStrings[2]);\n                        }\n                    }).fail(function() {\n                        swapClasses(resultElement, false);\n                        $(resultText).text(localizedStrings[2]);\n                    });\n                };\n\n                credentialsTrigger.click(function(e) {\n                    e.preventDefault();\n                    setDefault('#instructor_credentials');\n                    $('#instructor_result').text('...');\n                    setDefault('#student_credentials');\n                    $('#student_result').text('...');\n                    var instructorUsername = $('#id_safeassign_instructor_username').val();\n                    var instructorPassword = $('#id_safeassign_instructor_password').val();\n                    var studentUsername = $('#id_safeassign_student_username').val();\n                    var studentPassword = $('#id_safeassign_student_password').val();\n                    var userId = $('input[name=userid]').val();\n                    var baseUrl = $('#id_safeassign_api').val();\n                    testCredentials('#instructor_result', '#instructor_credentials', instructorUsername,\n                        instructorPassword, baseUrl, userId);\n                    testCredentials('#student_result', '#student_credentials', studentUsername, studentPassword,\n                        baseUrl, userId);\n                });\n\n                var cleanSelect = $('#id_safeassign_additional_roles');\n                if (cleanSelect.find('option').length > 1) {\n                    cleanSelect.change(function() {\n                        $( \"option:selected\" ).each(function() {\n                            if ($(this).val() == 0) {\n                                cleanSelect.val(0);\n                            }\n                        });\n                    });\n                }\n            }\n        };\n    }\n);\n"],"file":"settings.min.js"}