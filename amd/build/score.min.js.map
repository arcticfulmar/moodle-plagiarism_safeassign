{"version":3,"sources":["../src/score.js"],"names":["define","$","str","init","avgScore","userId","originalityReportLink","elementExists","selector","el","length","appendAvgScoreFilesTree","tree","td","attr","addClass","trow","append","table","div","prepend","reporttd","reportrow","getMessage","appendAvgScoreOnlineSubm","parent","reportdiv","messageString","get_string","when","done","s","whenTrue","containerSelector","maxIterations","prom","Deferred","i","checker","setInterval","reject","clearInterval","resolve","promise","pageObject","isFeedbackView","fileSelector","onlineSelector","readyFiles","then","readyOnline"],"mappings":"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","sourcesContent":["/**\n * This file is part of Moodle - http://moodle.org/\n *\n * Moodle is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Moodle is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @package   plagiarism_safeassign\n * @author    Guillermo Leon Alvarez Salamanca\n * @copyright Copyright (c) 2017 Open LMS (https://www.openlms.net)\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * JS code to listen the disclosure agreement checkbox in an assignment\n * configured with SafeAssign.\n */\ndefine(['jquery', 'core/str'], function($, str) {\n\n    return {\n\n        /**\n         * Adds a new DOM element in the submission tree object to display the average plagiarism\n         * score for some submission.\n         * @param {int} avgScore\n         * @param {int} userId\n         * @param {string} originalityReportLink\n         */\n        init: function(avgScore, userId, originalityReportLink) {\n\n            /**\n             * Checks if some element exist in page DOM.\n             * @param {string} selector\n             * @returns {boolean}\n             */\n            var elementExists = function(selector) {\n                var el = $(selector);\n                return (el.length) ? true : false;\n            };\n\n            /**\n             * Creates a new DOM element and attach it into the file submission tree.\n             * @param {string} selector\n             */\n            var appendAvgScoreFilesTree = function(selector) {\n                if (!elementExists('#safeassign_score_' + userId)) {\n                    var tree = $(selector);\n                    var td = $('<td></td>').attr('id', 'safeassign_text_' + userId);\n                    td.addClass('ygtvcell ygtvhtml ygtvcontent');\n                    var trow = $('<tr></tr>').addClass('ygtvrow').append(td);\n                    var table = $('<table></table>').attr('id', 'safeassign_score_' + userId).append(trow);\n                    var div = $('<div></div>').addClass('ygtvitem').append(table);\n                    tree.prepend(div);\n                    if (originalityReportLink) {\n                        var reporttd = $('<td></td>').attr('id', 'safeassign_or_' + userId)\n                            .addClass('ygtvcell ygtvhtml ygtvcontent');\n                        reporttd.append(originalityReportLink);\n                        var reportrow = $('<tr></tr>').addClass('ygtvrow').append(reporttd);\n                        $('#safeassign_score_' + userId).append(reportrow);\n                    }\n                    getMessage(avgScore, '#safeassign_text_' + userId);\n                }\n            };\n\n            /**\n             * Creates a new DOM element and attach it into the online submission region.\n             * @param {string} selector\n             */\n            var appendAvgScoreOnlineSubm = function(selector) {\n                if (!elementExists('#safeassign_online_sub_' + userId)) {\n                    var el = $(selector).parent();\n                    var div = $('<div></div>').attr('id', 'safeassign_online_sub_' + userId);\n                    if (originalityReportLink) {\n                        var reportdiv = $('<div></div>').attr('id', 'safeassign_online_or_' + userId);\n                        reportdiv.append(originalityReportLink);\n                        el.prepend(reportdiv);\n                    }\n                    el.prepend(div);\n                    getMessage(avgScore, '#safeassign_online_sub_' + userId);\n                }\n            };\n\n            /**\n             * Returns a message with the average score.\n             * @param {int} avgScore\n             * @param {string} selector\n             */\n            var getMessage = function(avgScore, selector) {\n\n                // Get overall score string via ajax.\n                var messageString = str.get_string('safeassign_overall_score', 'plagiarism_safeassign', avgScore);\n\n                $.when(messageString).done(function(s) {\n                    $(selector).append(s);\n                });\n\n            };\n\n            /**\n             * Makes a JQuery promise to see if some element exist in the DOM.\n             * @param {string} containerSelector\n             * @param {int} maxIterations\n             * @returns {promise} JQuery promise\n             */\n            var whenTrue = function(containerSelector, maxIterations) {\n                maxIterations = !maxIterations ? 10 : maxIterations;\n\n                var prom = $.Deferred();\n                var i = 0;\n                var checker = setInterval(function() {\n                    i = i + 1;\n                    if (i > maxIterations) {\n                        prom.reject();\n                        clearInterval(checker);\n                    } else {\n                        if (elementExists(containerSelector)) {\n                            prom.resolve();\n                            clearInterval(checker);\n                        }\n                    }\n                }, 200);\n\n                return prom.promise();\n            };\n\n            // Checks if we are on assign grading view.\n            var pageObject = $('#page-mod-assign-grading');\n            var isFeedbackView = pageObject.length;\n            var fileSelector = '.ygtvchildren';\n            var onlineSelector = '.plagiarism-inline.online-text-div';\n            if (isFeedbackView) {\n                fileSelector = '.user' + userId + ' .ygtvchildren';\n                onlineSelector = '.user' + userId + ' td div.plagiarism-inline.online-text-div';\n            }\n\n            var readyFiles = whenTrue(fileSelector, 20);\n            readyFiles.then(function() {\n                appendAvgScoreFilesTree(fileSelector);\n            });\n\n            var readyOnline = whenTrue(onlineSelector, 20);\n            readyOnline.then(function() {\n                appendAvgScoreOnlineSubm(onlineSelector);\n            });\n\n        }\n    };\n});\n"],"file":"score.min.js"}